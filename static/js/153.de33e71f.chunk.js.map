{"version":3,"file":"static/js/153.de33e71f.chunk.js","mappings":"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","sources":["HOC/withAuthNavigate.jsx","webpack://my-app/./src/Layout/Content/Dialogs/Contacts/contacts.module.css?aebd","webpack://my-app/./src/Layout/Content/Dialogs/Contacts/ContactsItem/contactsitem.module.css?9a03","Layout/Content/Dialogs/Contacts/ContactsItem/ContactsItem.jsx","Layout/Content/Dialogs/Contacts/ContactsContainer.jsx","Layout/Content/Dialogs/Contacts/Contacts.jsx","webpack://my-app/./src/Layout/Content/Dialogs/dialogs.module.css?2a82","webpack://my-app/./src/Layout/Content/Dialogs/Messages/MessageForm/messageform.module.css?848e","Layout/Content/Dialogs/Messages/MessageForm/MessageForm.jsx","webpack://my-app/./src/Layout/Content/Dialogs/Messages/messages.module.css?99cc","webpack://my-app/./src/Layout/Content/Dialogs/Messages/MessagesItem/messagesitem.module.css?0691","Layout/Content/Dialogs/Messages/MessagesItem/MessagesItem.jsx","Layout/Content/Dialogs/Messages/MessagesContainer.jsx","Layout/Content/Dialogs/Messages/Messages.jsx","Layout/Content/Dialogs/Dialogs.jsx","Layout/Content/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nexport function withAuthNavigate(Component) {\n\n  let RedirectComponent = (props) => {\n\n    let navigate = useNavigate();\n\n    let state = useSelector((state) => {\n      return {\n        isAuth: state.auth.userData.isAuth,\n      }\n    })\n\n    useEffect(() => {\n      if (!state.isAuth) {\n        navigate('/login')\n      }\n    },[state.isAuth, navigate])\n\n    return (\n      <Component {...props}/>\n    )\n\n    // return (\n    //   !state.isAuth ? <Navigate to={'/login'} /> : <Component {...props} />\n    // )\n  }\n\n  return RedirectComponent;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"contacts_contacts__7CWmJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contactsitem_item__q2GBN\",\"link\":\"contactsitem_link__tVNXi\",\"activeLink\":\"contactsitem_activeLink__JfhAr\",\"avatarBox\":\"contactsitem_avatarBox__vQBoj\"};","import React from 'react';\nimport styles from './contactsitem.module.css';\nimport { NavLink } from 'react-router-dom';\nimport defaultAvatar from '../../../../../assets/images/defaultAvatar.png';\n\nexport default function ContactsItem(props) {\n  let path = `/dialogs/${props.id}`;\n\n  return (\n    <div className={styles.item}>\n      <div className={styles.avatarBox}>\n        <img src={props.imgSrc ? props.imgSrc : defaultAvatar} alt=\"avatar\" />\n      </div>\n      <NavLink to={path}\n        className={navData => navData.isActive ? styles.activeLink : styles.link}\n      >\n        {props.name}\n      </NavLink>\n    </div>\n  );\n}\n","import Contacts from './Contacts';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    state: state.contactsData,\n  }\n}\n\nconst ContactsContainer = connect(mapStateToProps)(Contacts);\nexport default ContactsContainer;\n","import React from 'react';\nimport styles from './contacts.module.css';\nimport ContactsItem from './ContactsItem/ContactsItem';\n\nexport default function Contacts(props) {\n\n  let contactsElements = props.state.contactsData\n    .map((el) => <ContactsItem name={el.name} id={el.id} imgSrc={el.imgSrc} />)\n\n  return (\n    <div className={styles.contacts}>\n      {contactsElements}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"dialogs_dialogs__fwpug\"};","// extracted by mini-css-extract-plugin\nexport default {\"messageform\":\"messageform_messageform__i516f\",\"messageArea\":\"messageform_messageArea__nRtTk\",\"sendMessageBtn\":\"messageform_sendMessageBtn__xTv1M\"};","import React from 'react';\nimport styles from './messageform.module.css';\n\nexport default function MessageForm(props) {\n\n  let onSendMessage = () => {\n    props.sendMessage()\n  }\n\n  let onChangeTextArea = (e) => {\n    let text = e.target.value;\n    props.changeTextArea(text);\n  }\n\n  return (\n    <div className={styles.messageform}>\n      <textarea\n        onChange={onChangeTextArea}\n        placeholder='Enter message'\n        value = {props.textAreaMessage}\n        className={styles.messageArea}\n        rows = '6'\n        cols = '40'\n      />\n      <button\n        onClick={onSendMessage}\n        className={styles.sendMessageBtn}\n        type='button'\n      >Send message</button>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"messages_messages__cjZ0q\",\"chat\":\"messages_chat__xj7-F\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"messagesitem_item__982G1\",\"mine\":\"messagesitem_mine__-rGLY\",\"messageText\":\"messagesitem_messageText__+Xwtc\",\"avatarBox\":\"messagesitem_avatarBox__-IeOo\"};","import React from 'react';\nimport styles from './messagesitem.module.css';\nimport defaultAvatar from '../../../../../assets/images/defaultAvatar.png';\n\nexport default function MessagesItem(props) {\n  return (\n    <div className={ props.owner === 'Me' ? styles.item : styles.item + ' ' + styles.mine}>\n      <div className={styles.avatarBox}>\n        <img src={props.imgSrc ? props.imgSrc : defaultAvatar} alt=\"avatar\" />\n      </div>\n      <p className={styles.messageText}>\n        {props.message}\n      </p>\n    </div>\n  );\n}\n","\nimport { addMessageActionCreator, changeMessageTextAreaActionCreator } from '../../../../redux/chatReducer';\nimport Messages from './Messages';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    state: state.chatData,\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: () => {\n      dispatch(addMessageActionCreator())\n    },\n    changeTextArea: (text) => {\n      dispatch(changeMessageTextAreaActionCreator(text));\n    }\n  }\n}\n\nconst MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(Messages);\nexport default MessagesContainer;\n","import React from 'react';\nimport MessageForm from './MessageForm/MessageForm';\nimport styles from './messages.module.css';\nimport MessagesItem from './MessagesItem/MessagesItem';\n\nexport default function Messages(props) {\n\n  let messagesElements = props.state.messagesData\n    .map((el) => <MessagesItem\n      message={el.message}\n      id={el.id}\n      owner={el.owner}\n      imgSrc={el.imgSrc}\n    />);\n\n  return (\n    <div className={styles.messages}>\n      <div className={styles.chat}>\n        {messagesElements}\n      </div>\n      <MessageForm\n        textAreaMessage={props.state.textAreaMessage}\n        sendMessage={props.sendMessage}\n        changeTextArea={props.changeTextArea}\n      />\n    </div>\n\n  );\n}\n","import React from 'react';\nimport ContactsContainer from './Contacts/ContactsContainer';\nimport styles from './dialogs.module.css';\nimport MessagesContainer from './Messages/MessagesContainer';\n\nexport default function Dialogs(props) {\n  return (\n    <div className={styles.dialogs}>\n      <ContactsContainer />\n      <MessagesContainer />\n    </div>\n  );\n}\n","import React from 'react';\nimport { withAuthNavigate } from '../../../HOC/withAuthNavigate';\nimport Dialogs from './Dialogs';\n\nconst DialogsComponent = withAuthNavigate(DialogsContainer);\n\nfunction DialogsContainer(props) {\n  return (\n    <Dialogs />\n  );\n}\n\nexport default DialogsComponent;\n"],"names":["withAuthNavigate","Component","props","navigate","useNavigate","state","useSelector","isAuth","auth","userData","useEffect","_jsx","_objectSpread","ContactsItem","path","concat","id","_jsxs","className","styles","children","src","imgSrc","defaultAvatar","alt","NavLink","to","navData","isActive","name","connect","contactsData","contactsElements","map","el","MessageForm","onChange","e","text","target","value","changeTextArea","placeholder","textAreaMessage","rows","cols","onClick","sendMessage","type","MessagesItem","owner","message","chatData","dispatch","addMessageActionCreator","changeMessageTextAreaActionCreator","messagesElements","messagesData","Dialogs","ContactsContainer","MessagesContainer"],"sourceRoot":""}