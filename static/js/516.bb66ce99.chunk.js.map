{"version":3,"file":"static/js/516.bb66ce99.chunk.js","mappings":"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","sources":["HOC/withAuthNavigate.jsx","webpack://my-app/./src/Layout/Content/Profile/MyPosts/myposts.module.css?081d","webpack://my-app/./src/Layout/Content/Profile/MyPosts/Post/post.module.css?e25f","Layout/Content/Profile/MyPosts/Post/Post.jsx","Layout/Content/Profile/MyPosts/MyPostsContainer.jsx","Layout/Content/Profile/MyPosts/MyPosts.jsx","webpack://my-app/./src/Layout/Content/Profile/profile.module.css?e6ca","webpack://my-app/./src/Layout/Content/Profile/ProfileInfo/profileinfo.module.css?e299","webpack://my-app/./src/Layout/Content/Profile/ProfileInfo/Status/status.module.css?92e9","Layout/Content/Profile/ProfileInfo/Status/Status.jsx","webpack://my-app/./src/Layout/Content/Profile/ProfileInfo/Photo/photo.module.css?11be","Layout/Content/Profile/ProfileInfo/Photo/Photo.jsx","webpack://my-app/./src/Layout/Content/Profile/ProfileInfo/UserInfo/EditForm/editform.module.css?4e3b","Layout/Content/Profile/ProfileInfo/UserInfo/EditForm/EditForm.jsx","webpack://my-app/./src/Layout/Content/Profile/ProfileInfo/UserInfo/userinfo.module.css?6e14","Layout/Content/Profile/ProfileInfo/UserInfo/UserInfo.jsx","Layout/Content/Profile/ProfileInfo/ProfileInfo.jsx","Layout/Content/Profile/Profile.jsx","redux/profileSelectors.js","Layout/Content/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nexport function withAuthNavigate(Component) {\n\n  let RedirectComponent = (props) => {\n\n    let navigate = useNavigate();\n\n    let state = useSelector((state) => {\n      return {\n        isAuth: state.auth.userData.isAuth,\n      }\n    })\n\n    useEffect(() => {\n      if (!state.isAuth) {\n        navigate('/login')\n      }\n    },[state.isAuth, navigate])\n\n    return (\n      <Component {...props}/>\n    )\n\n    // return (\n    //   !state.isAuth ? <Navigate to={'/login'} /> : <Component {...props} />\n    // )\n  }\n\n  return RedirectComponent;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"myposts_posts__oLJDR\",\"textareaBox\":\"myposts_textareaBox__N6PZG\",\"createPostBtn\":\"myposts_createPostBtn__GFc49\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"post_item__Jhl9K\",\"avatar\":\"post_avatar__kTjek\"};","import React from 'react';\nimport styles from './post.module.css';\n\nexport default function Post(props) {\n\n  return (\n    <div className={styles.item}>\n      <div className={styles.avatar}>\n        <img src={props.imgSrc ? props.imgSrc : \"https://bronk.club/uploads/posts/2023-02/1676963697_bronk-club-p-obichnaya-otkritka-vkontakte-3.png\"} alt=\"avatar\" />\n      </div>\n      {props.message}\n      <br />\n      <span>{props.likesCount} likes</span>\n    </div>\n  );\n}\n","// import React from 'react';\nimport MyPosts from \"./MyPosts\";\nimport { addPost, changePostTextArea } from '../../../../redux/profileReducer';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    state: state.profileData.postsData,\n  }\n};\n\nconst MyPostsContainer = connect(mapStateToProps,\n  { addPost, changePostTextArea })\n  (MyPosts);\n\nexport default MyPostsContainer;\n\n// ВАРИАНТ С ИСПОЛЬЗОВАНИЕМ ХУКОВ useSelector и useDispatch\n// В документации react-redux советуют использовать именно эти хуки\n// С использованием хуков нет необходимости делать копии объектов -> let copyState в profileReducer.js\n\n// export function MyPostsContainer(props) {\n\n//   let state = useSelector((state) => state.profileData);\n//   let dispatch = useDispatch()\n\n//   return (\n//     <MyPosts\n//       state={state}\n//       addPost={() => {\n//         let action = addPostActionCreator()\n//         dispatch(action);\n//       }}\n//       changeTextArea={(text) => {\n//         let action = changePostTextAreaActionCreator(text)\n//         dispatch(action);\n//       }}\n//     />\n//   )\n// }\n","import React from 'react';\nimport styles from './myposts.module.css';\nimport Post from './Post/Post';\n\nexport default function MyPosts(props) {\n\n  console.log(props);\n\n  let postsElements = props.state\n    .map((el) => <Post\n      message={el.message}\n      id={el.id}\n      likesCount={el.likesCount}\n      imgSrc={el.imgSrc}\n    />);\n\n  const onAddPost = () => {\n    props.addPost();\n  }\n\n  const onChangeTextArea = (e) => {\n    let text = e.target.value;\n    props.changePostTextArea(text);\n  }\n\n  return (\n    <div className={styles.posts}>\n      <h3>MyPosts</h3>\n      <div>\n        <div className={styles.textareaBox}>\n          <textarea\n            onChange={onChangeTextArea}\n            placeholder='Enter text'\n            value={props.state.textAreaPost}\n          />\n        </div>\n        <div className={styles.createPostBtn}>\n          <button onClick={onAddPost}>Create Post</button>\n        </div>\n      </div>\n      {postsElements}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"profile_profile__kpOpt\"};","// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"profileinfo_profileInfo__oUfY3\",\"wallpaper\":\"profileinfo_wallpaper__ICupb\",\"descriptionBox\":\"profileinfo_descriptionBox__25-4I\",\"description\":\"profileinfo_description__P-Jyv\"};","// extracted by mini-css-extract-plugin\nexport default {\"statusBox\":\"status_statusBox__lDNeW\",\"statusTitle\":\"status_statusTitle__nwsyL\",\"status\":\"status_status__wKs35\"};","import React from 'react';\nimport styles from './status.module.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nexport default function Status(props) {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status)\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status])\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  }\n\n  return (\n    <div className={styles.statusBox}>\n      <span className={styles.statusTitle}>Status: </span>\n\n      {!editMode\n        ?\n        <span>\n          {props.isOwner\n            ?\n            <span\n              onDoubleClick={() => setEditMode(true)}\n              className={styles.status}\n            >{status ? status : 'No status'}\n            </span>\n            :\n            <span className={styles.status}>{status ? status : 'No status'}</span>\n          }\n        </span>\n        :\n        <span>\n          <input\n            onChange={onStatusChange}\n            onBlur={() => {\n              props.updateStatus(status);\n              setEditMode(false);\n            }}\n            value={status}\n            autoFocus={true}\n          />\n        </span>\n      }\n    </div>\n  )\n}\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"avatarBox\":\"photo_avatarBox__3vb20\",\"addPhotoBtn\":\"photo_addPhotoBtn__ZTUuZ\"};","import React from 'react';\nimport styles from './photo.module.css';\nimport defaultAvatar from '../../../../../assets/images/defaultAvatar.png'\n\nexport default function Photo(props) {\n\n  const getPhoto = (e) => {\n    if (e.target.files.length) {\n      props.setPhoto(e.target.files[0]);\n    }\n  }\n\n  return (\n    <div className={styles.avatarBox}>\n      <img src={props.photos.large ? props.photos.large : defaultAvatar} alt=\"аватар\" />\n      {props.isOwner &&\n        <div className={styles.addPhotoBtn} >\n          <input type=\"file\" id=\"load-photo\" onChange={getPhoto}/>\n          <label htmlFor=\"load-photo\">Load photo</label>\n        </div>\n      }\n    </div>\n  )\n}\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"editFormBox\":\"editform_editFormBox__6q2tV\",\"editForm\":\"editform_editForm__oFwEN\",\"inputBox\":\"editform_inputBox__qT+TM\",\"errorMessage\":\"editform_errorMessage__2xa2o\",\"contacts\":\"editform_contacts__ORN+S\",\"input\":\"editform_input__gAn+t\",\"error\":\"editform_error__xYE8w\",\"contactsContainer\":\"editform_contactsContainer__bTpEs\",\"otherInfoContainer\":\"editform_otherInfoContainer__Qou5f\",\"checkboxContainer\":\"editform_checkboxContainer__oI3mQ\",\"btnSubmit\":\"editform_btnSubmit__Nh-4G\",\"errorForm\":\"editform_errorForm__MX1Ev\"};","import React from 'react';\nimport styles from './editform.module.css';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\n\nexport default function EditForm(props) {\n\n  const {\n    clearErrors,\n    setError,\n    register,\n    handleSubmit,\n    formState: { errors, isValid }\n  } = useForm({\n    mode: 'onChange',\n  });\n\n  const onSubmit = (async data => {\n    await props.setUserInfo(data, setError);\n    props.setEditMode(false);\n  })\n\n  return (\n    <div className={styles.editFormBox}>\n      <form\n        className={styles.editForm}\n        onSubmit={\n          handleSubmit(onSubmit)\n        }\n        onChange={() => clearErrors('invalidDatas')}\n      >\n        <div className={styles.otherInfoContainer}>\n          <div className={styles.inputBox}>\n            <label htmlFor=\"fullName\">Full name</label>\n            <input\n              className={!errors.fullName\n                ? styles.input\n                : classNames(styles.input, styles.error)}\n              type='text'\n              name='fullName'\n              placeholder='Full name'\n              {...register('fullName',\n                {\n                  value: props.profile.fullName || null,\n\n                  required: 'This is require field',\n                  minLength: {\n                    value: 4,\n                    message: 'Please enter at least 4 characters'\n                  },\n                  maxLength: {\n                    value: 15,\n                    message: 'Please enter at most 15 characters'\n                  }\n                }\n              )}\n            />\n            {errors.fullName && <div className={styles.errorMessage}>{errors.fullName.message}</div>}\n          </div>\n\n          <div className={classNames(styles.inputBox, styles.checkboxContainer)}>\n            <label className={styles.label} htmlFor='lookingForAJob'>Looking for a job</label>\n            <input\n              name='lookingForAJob'\n              type='checkbox'\n              {...register(\"lookingForAJob\", { value: props.profile.lookingForAJob || false })}\n              className={styles.checkbox}\n            />\n          </div>\n\n          <div className={styles.inputBox}>\n            <label htmlFor=\"aboutMe\">Job description</label>\n            <textarea\n              className={!errors.lookingForAJobDescription\n                ? styles.input\n                : classNames(styles.input, styles.error)}\n              type='text'\n              name='lookingForAJobDescription'\n              placeholder='Job description'\n              {...register('lookingForAJobDescription',\n                {\n                  value: props.profile.lookingForAJobDescription || null,\n\n                  required: 'This is require field',\n                  minLength: {\n                    value: 4,\n                    message: 'Please enter at least 4 characters'\n                  },\n                  maxLength: {\n                    value: 40,\n                    message: 'Please enter at most 40 characters'\n                  }\n                }\n              )}\n            />\n            {errors.lookingForAJobDescription && <div className={styles.errorMessage}>{errors.lookingForAJobDescription.message}</div>}\n          </div>\n\n          <div className={styles.inputBox}>\n            <label htmlFor=\"aboutMe\">Some about me</label>\n            <textarea\n              className={!errors.aboutMe\n                ? styles.input\n                : classNames(styles.input, styles.error)}\n              type='text'\n              name='aboutMe'\n              placeholder='About me'\n              {...register('aboutMe',\n                {\n                  value: props.profile.aboutMe || null,\n                  required: 'This is require field',\n                  minLength: {\n                    value: 4,\n                    message: 'Please enter at least 4 characters'\n                  },\n                  maxLength: {\n                    value: 40,\n                    message: 'Please enter at most 40 characters'\n                  }\n                }\n              )}\n            />\n            {errors.aboutMe && <div className={styles.errorMessage}>{errors.aboutMe.message}</div>}\n          </div>\n        </div>\n\n        <div className={styles.contactsContainer}>\n          <h3>Contacts</h3>\n\n          <div className={styles.contacts}>\n            {Object.keys(props.profile.contacts).map(key => {\n              return (\n                <div className={styles.inputBox}>\n                  <label htmlFor={key}>{key[0].toUpperCase() + key.substring(1)}</label>\n                  <input\n                    className={(errors.contacts && !errors.contacts[key]) || !errors.contacts\n                      ? styles.input\n                      : classNames(styles.input, styles.error)}\n                    type='text'\n                    name={key}\n                    placeholder={key[0].toUpperCase() + key.substring(1)}\n                    {...register(`contacts[${key}]`,\n                      {\n                        value: props.profile.contacts[key] || null,\n\n                        pattern: {\n                          value:  /(https:\\/\\/www\\.|http:\\/\\/www\\.|https:\\/\\/|http:\\/\\/)[a-zA-Z]{2,}(\\.[a-zA-Z]{2,})(\\.[a-zA-Z]{2,})?\\/[a-zA-Z0-9]{2,}|((https:\\/\\/www\\.|http:\\/\\/www\\.|https:\\/\\/|http:\\/\\/)?[a-zA-Z]{2,}(\\.[a-zA-Z]{2,})(\\.[a-zA-Z]{2,})?)|(https:\\/\\/www\\.|http:\\/\\/www\\.|https:\\/\\/|http:\\/\\/)?[a-zA-Z0-9]{2,}\\.[a-zA-Z0-9]{2,}\\.[a-zA-Z0-9]{2,}(\\.[a-zA-Z0-9]{2,})?/g,\n                          message: \"Please enter a valid url\"\n                        }\n                      },\n                    )}\n                  />\n                  {errors.contacts && errors.contacts[key] && <div className={styles.errorMessage}>{errors.contacts && errors.contacts[key].message}</div>}\n                </div>\n              )\n            })}\n          </div>\n        </div>\n\n        <div>\n          <input\n            className={styles.btnSubmit}\n            type='submit'\n            value='Save'\n            disabled={!isValid}\n          />\n        </div>\n      </form>\n      {errors.serverError && <div className={styles.errorForm}>{errors.serverError.message}</div>}\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"userInfo\":\"userinfo_userInfo__RRYT8\",\"fullName\":\"userinfo_fullName__oIenW\",\"addInfo\":\"userinfo_addInfo__vyKuE\",\"contactTitle\":\"userinfo_contactTitle__PVmf6\",\"descrJob\":\"userinfo_descrJob__c3Ljw\",\"aboutTitle\":\"userinfo_aboutTitle__dAtUU\",\"editBtn\":\"userinfo_editBtn__yLNO9\",\"btnSubmit\":\"userinfo_btnSubmit__Jgvj7\"};","import React from 'react';\nimport { useState } from 'react';\nimport EditForm from './EditForm/EditForm';\nimport styles from './userinfo.module.css';\n\nconst Contacts = ({ contactTitle, contactValue }) => {\n  return (\n    <li>\n      <span className={styles.contactTitle}>{contactTitle}: </span>\n      <span>{contactValue || '-'}</span>\n    </li>\n  )\n}\n\nexport default function UserInfo(props) {\n\n  const [editMode, setEditMode] = useState(false);\n\n  return (\n    <div className={styles.userInfo}>\n      {props.isOwner && <button onClick={() => setEditMode(true)} className={styles.editBtn}>Edit</button>}\n      {editMode && <EditForm\n      setEditMode={setEditMode}\n      profile={props.profile}\n      setUserInfo={props.setUserInfo}\n      />}\n      <h1 className={styles.fullName}>{props.profile.fullName}</h1>\n      <div className={styles.addInfo}>\n        <div>\n          <p>{props.profile.lookingForAJob ? 'I need a job' : 'Do not find a job'}</p>\n          <p>\n            <span className={styles.descrJob}>Description: </span>\n            {props.profile.lookingForAJobDescription || '-'}\n          </p>\n        </div>\n        <div>\n          <p>Contacts</p>\n          <ul>\n            {Object.keys(props.profile.contacts).map(key => {\n              return <Contacts\n                key={key}\n                contactTitle={key}\n                contactValue={props.profile.contacts[key]}\n              />;\n            })}\n          </ul>\n        </div>\n      </div>\n      <p>\n        <span className={styles.aboutTitle}>Some about me: </span>\n        {props.profile.aboutMe || '-'}\n      </p>\n    </div>\n  )\n}\n\n\n","import React from 'react';\nimport styles from './profileinfo.module.css';\nimport Preloader from '../../../common/Preloder/Preloader';\nimport Status from './Status/Status';\nimport Photo from './Photo/Photo';\nimport UserInfo from './UserInfo/UserInfo';\n\nexport default function ProfileInfo(props) {\n\n  if (!props.profile) {\n    return <Preloader />\n  }\n\n  return (\n    <div className={styles.profileInfo}>\n      <div className={styles.wallpaper}>\n        <img src=\"https://img.pikbest.com/backgrounds/20220119/blue-purple-gradient-fluid-abstract-minimalistic-background_6241863.jpg!w700wp\" alt=\"info\" />\n      </div>\n      <div className={styles.descriptionBox}>\n        <div className={styles.description}>\n          <Photo\n            isOwner={props.isOwner}\n            photos={props.profile.photos}\n            setPhoto={props.setPhoto}\n          />\n\n          <UserInfo\n            isOwner={props.isOwner}\n            profile={props.profile}\n            setUserInfo={props.setUserInfo}\n          />\n        </div>\n\n        <Status\n          isOwner={props.isOwner}\n          status={props.status}\n          updateStatus={props.updateStatus}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport styles from './profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nexport default function Profile(props) {\n\n  return (\n    <div className={styles.profile}>\n      <ProfileInfo\n        setPhoto={props.setPhoto}\n        isOwner={props.isOwner}\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n        setUserInfo={props.setUserInfo}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n}\n","export const selectProfile = state => state.profileData.profile;\nexport const selectStatus = state => state.profileData.status;\n","import React from 'react';\nimport Profile from './Profile';\nimport { getUser, getStatus, updateStatus, setPhoto, setInfo } from '../../../redux/profileReducer';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { withAuthNavigate } from '../../../HOC/withAuthNavigate';\nimport { selectProfile, selectStatus } from '../../../redux/profileSelectors';\nimport { selectAuthorizedUserId } from '../../../redux/authSelectors';\n\nconst ProfileComponent = withAuthNavigate(ProfileContainer);\n\nfunction ProfileContainer(props) {\n\n  const authorizedUserId = useSelector(selectAuthorizedUserId)\n  const profile = useSelector(selectProfile);\n  const status = useSelector(selectStatus);\n\n  let dispatch = useDispatch();\n\n  let { userId } = useParams();\n\n  if (!userId) {\n    userId = authorizedUserId;\n  }\n\n  useEffect(() => {\n    dispatch(getUser(userId));\n    dispatch(getStatus(userId));\n  }, [dispatch, userId]);\n\n  const onUpdateStatus = (status) => dispatch(updateStatus(status));\n  const onSetPhoto = (photo) => dispatch(setPhoto(photo));\n  const onSetUserInfo = (info, setError) => dispatch(setInfo(info, setError));\n\n  return (\n    <Profile\n      profile={profile}\n      status={status}\n      setUserInfo={onSetUserInfo}\n      updateStatus={onUpdateStatus}\n      setPhoto={onSetPhoto}\n      isOwner = {userId === authorizedUserId}\n    />\n  );\n}\n\nexport default ProfileComponent;\n"],"names":["withAuthNavigate","Component","props","navigate","useNavigate","state","useSelector","isAuth","auth","userData","useEffect","_jsx","_objectSpread","Post","_jsxs","className","styles","children","src","imgSrc","alt","message","likesCount","connect","profileData","postsData","addPost","changePostTextArea","console","log","postsElements","map","el","id","onChange","e","text","target","value","placeholder","textAreaPost","onClick","Status","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","currentTarget","onBlur","updateStatus","autoFocus","isOwner","onDoubleClick","Photo","photos","large","defaultAvatar","type","files","length","setPhoto","htmlFor","EditForm","_useForm","useForm","mode","clearErrors","setError","register","handleSubmit","_useForm$formState","formState","errors","isValid","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","setUserInfo","stop","_x","apply","arguments","fullName","classNames","name","profile","required","minLength","maxLength","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","key","toUpperCase","substring","concat","pattern","disabled","serverError","Contacts","contactTitle","contactValue","UserInfo","ProfileInfo","Preloader","Profile","MyPostsContainer","selectProfile","selectStatus","authorizedUserId","selectAuthorizedUserId","dispatch","useDispatch","userId","useParams","getUser","getStatus","info","setInfo","photo"],"sourceRoot":""}