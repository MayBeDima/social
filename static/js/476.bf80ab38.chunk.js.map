{"version":3,"file":"static/js/476.bf80ab38.chunk.js","mappings":"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","sources":["webpack://my-app/./src/Layout/Login/login.module.css?1dc2","Layout/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"login_header__wDdZ4\",\"errorForm\":\"login_errorForm__ZWfxl\",\"inputBox\":\"login_inputBox__Lq8bB\",\"input\":\"login_input__3zH6l\",\"error\":\"login_error__xIDef\",\"checkboxContainer\":\"login_checkboxContainer__saXAw\",\"checkbox\":\"login_checkbox__WyQyD\",\"label\":\"login_label__wzZZg\",\"btnSubmit\":\"login_btnSubmit__mDBj2\",\"errorMessage\":\"login_errorMessage__XpfRU\"};","import React from 'react';\nimport styles from './login.module.css';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../redux/authReducer';\nimport { Navigate } from 'react-router-dom';\nimport { selectIsAuth } from '../../redux/authSelectors';\n\nexport default function Login(props) {\n\n  const dispatch = useDispatch();\n  const isAuth = useSelector(selectIsAuth);\n\n  const {\n    clearErrors,\n    setError,\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors, isValid }\n  } = useForm({\n    mode: 'onChange',\n  });\n\n  const onSubmit = (async data => {\n    console.log(data);\n    dispatch(login(data.email, data.password, data.rememberMe, setError))\n  })\n\n  if (isAuth) {\n    return <Navigate to='/profile' />\n  }\n\n  console.log(watch(\"email\"));\n  console.log(watch(\"password\"));\n  console.log(watch(\"rememberMe\"));\n\n  return (\n    <div>\n      <h1 className={styles.header}>Login</h1>\n\n      <form onSubmit={handleSubmit(onSubmit)}\n        onChange={() => clearErrors('invalidDatas')}\n      >\n        <div className={styles.inputBox}>\n          <input\n            className={!errors.email\n              ? styles.input\n              : classNames(styles.input, styles.error)}\n            type='text'\n            name='email'\n            placeholder='email'\n            {...register('email',\n              {\n                required: 'This is require field',\n                pattern: {\n                  value: /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n                  message: \"Please enter a valid email address\"\n                }\n              })}\n          />\n          {errors.email && <div className={styles.errorMessage}>{errors.email.message}</div>}\n        </div>\n\n        <div className={styles.inputBox}>\n          <input\n            className={!errors.password\n              ? styles.input\n              : classNames(styles.input, styles.error)}\n            type='password'\n            name='password'\n            placeholder='password'\n            {...register('password',\n              {\n                required: 'This is require field',\n                minLength: {\n                  value: 4,\n                  message: 'Please enter at least 4 characters'\n                },\n                maxLength: {\n                  value: 15,\n                  message: 'Please enter at most 15 characters'\n                }\n              })}\n          />\n          {errors.password && <div className={styles.errorMessage}>{errors.password.message}</div>}\n        </div>\n\n        <div className={classNames(styles.inputBox, styles.checkboxContainer)}>\n          <input\n            name='rememberMe'\n            type='checkbox'\n            {...register(\"rememberMe\")}\n            className={styles.checkbox}\n          />\n          <label className={styles.label} htmlFor='rememberMe'>Remember me</label>\n        </div>\n\n        <div>\n          <input\n            className={styles.btnSubmit}\n            type='submit'\n            value='Submit'\n            disabled={!isValid}\n          />\n        </div>\n      </form>\n      {errors.invalidDatas && <div className={styles.errorForm}>{errors.invalidDatas.message}</div>}\n    </div >\n  );\n}\n"],"names":["Login","props","dispatch","useDispatch","isAuth","useSelector","selectIsAuth","_useForm","useForm","mode","clearErrors","setError","register","handleSubmit","watch","_useForm$formState","formState","errors","isValid","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","console","log","login","email","password","rememberMe","stop","_x","apply","arguments","_jsx","Navigate","to","_jsxs","children","className","styles","onChange","_objectSpread","classNames","type","name","placeholder","required","pattern","value","message","minLength","maxLength","htmlFor","disabled","invalidDatas"],"sourceRoot":""}